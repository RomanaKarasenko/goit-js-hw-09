{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const STORAGE_KEY = 'feedback-form-state';\n\nconst form = document.querySelector('.feedback-form');\nconst emailInput = form.querySelector('input[name=\"email\"]');\nconst messageTextarea = form.querySelector('textarea');\nconst submitButton = form.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('input', onFormInput);\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const emailValue = emailInput.value.trim();\n  const messageValue = messageTextarea.value.trim();\n\n  // Перевірка, чи заповнені обидва поля форми перед сабмітом\n  if (emailValue && messageValue) {\n    // Виведення у консоль об'єкта з поточними значеннями\n    console.log({\n      email: emailValue,\n      message: messageValue,\n    });\n\n    // Очищення сховища, полів форми і об'єкта для збереження значень\n    localStorage.removeItem(STORAGE_KEY);\n    form.reset();\n    clearFormValues();\n  } else if (emailValue || messageValue) {\n    // Якщо тільки одне поле заповнене, вивести алерт\n    alert('Please fill in both email and message fields before submitting.');\n  }\n}\n\nfunction onFormInput() {\n  const emailValue = emailInput.value.trim();\n  const messageValue = messageTextarea.value.trim();\n\n  // Збереження поточного стану форми у локальне сховище\n  saveToLS(STORAGE_KEY, { email: emailValue, message: messageValue });\n}\n\nfunction saveToLS(key, value) {\n  const zip = JSON.stringify(value);\n  localStorage.setItem(key, zip);\n}\n\nfunction loadFromLS(key) {\n  const zip = localStorage.getItem(key);\n  try {\n    return JSON.parse(zip);\n  } catch {\n    return null;\n  }\n}\n\nfunction clearFormValues() {\n  emailInput.value = '';\n  messageTextarea.value = '';\n}\n\nfunction init() {\n  const data = loadFromLS(STORAGE_KEY) || {};\n  emailInput.value = data.email || '';\n  messageTextarea.value = data.message || '';\n}\n\ninit();\n"],"names":["STORAGE_KEY","form","emailInput","messageTextarea","onFormInput","onFormSubmit","emailValue","messageValue","clearFormValues","saveToLS","key","value","zip","loadFromLS","init","data"],"mappings":"wFAAA,MAAMA,EAAc,sBAEdC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAaD,EAAK,cAAc,qBAAqB,EACrDE,EAAkBF,EAAK,cAAc,UAAU,EAChCA,EAAK,cAAc,uBAAuB,EAE/DA,EAAK,iBAAiB,QAASG,CAAW,EAC1CH,EAAK,iBAAiB,SAAUI,CAAY,EAE5C,SAASA,EAAa,EAAG,CACvB,EAAE,eAAc,EAEhB,MAAMC,EAAaJ,EAAW,MAAM,KAAI,EAClCK,EAAeJ,EAAgB,MAAM,KAAI,EAG3CG,GAAcC,GAEhB,QAAQ,IAAI,CACV,MAAOD,EACP,QAASC,CACf,CAAK,EAGD,aAAa,WAAWP,CAAW,EACnCC,EAAK,MAAK,EACVO,MACSF,GAAcC,IAEvB,MAAM,iEAAiE,CAE3E,CAEA,SAASH,GAAc,CACrB,MAAME,EAAaJ,EAAW,MAAM,KAAI,EAClCK,EAAeJ,EAAgB,MAAM,KAAI,EAG/CM,EAAST,EAAa,CAAE,MAAOM,EAAY,QAASC,CAAY,CAAE,CACpE,CAEA,SAASE,EAASC,EAAKC,EAAO,CAC5B,MAAMC,EAAM,KAAK,UAAUD,CAAK,EAChC,aAAa,QAAQD,EAAKE,CAAG,CAC/B,CAEA,SAASC,EAAWH,EAAK,CACvB,MAAME,EAAM,aAAa,QAAQF,CAAG,EACpC,GAAI,CACF,OAAO,KAAK,MAAME,CAAG,CACzB,MAAI,CACA,OAAO,IACR,CACH,CAEA,SAASJ,GAAkB,CACzBN,EAAW,MAAQ,GACnBC,EAAgB,MAAQ,EAC1B,CAEA,SAASW,GAAO,CACd,MAAMC,EAAOF,EAAWb,CAAW,GAAK,CAAA,EACxCE,EAAW,MAAQa,EAAK,OAAS,GACjCZ,EAAgB,MAAQY,EAAK,SAAW,EAC1C,CAEAD,EAAM"}